apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'kotlin'
apply plugin: 'java'

repositories {
    mavenCentral()
    maven { url 'https://download.corda.net/maven/corda-releases' }
    maven { url 'https://download.corda.net/maven/corda-dependencies' }
}

// The module is shipped to Corda Node as Cordapp, although it doesn't have any flows.
cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "EVM Interop Contracts Library"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
    sealing.enabled false
    signing.enabled false
}

dependencies {
    // Kotlin standard library
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"

    // Web3j dependencies
    api("org.web3j:core:$web3jVersion") { transitive = true }

    // Project dependencies
    api project(':evm-interop-common')
    cordapp project(':evm-interop-contracts')

    // test dependencies
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    testImplementation("org.web3j:core:$web3jVersion")
    testImplementation("org.web3j:utils:$web3jVersion")
    testImplementation("org.web3j:crypto:$web3jVersion")
    testImplementation("org.web3j:rlp:$web3jVersion")

    testImplementation "$corda_release_group:corda-node:$corda_release_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "$corda_release_group:corda-core-test-utils:$corda_release_version"
}

